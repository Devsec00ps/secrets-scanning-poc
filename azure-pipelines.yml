# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

resources:
  repositories:
  - repository: githound
    type: github
    name: soccerjoshj07/git-hound-config
    endpoint: soccerjoshj07

pool:
 vmImage: 'ubuntu-latest'

steps:
- checkout: self
- checkout: githound

- script: |
    go get github.com/ezekg/git-hound
    sudo ln -sf ~/go/bin/git-hound /usr/local/bin/git-hound
    echo "##vso[task.setvariable variable=repoName;]$(echo $(Build.Repository.Name) | awk -F'/' '{print $2}')"
  displayName: 'install git-hound'

# - pwsh: | 
#     $output = git diff 4b825dc642cb6eb9a060e54bf8d69288fbee4904 --staged | git-hound -config="../git-hound-config/.githound.yml" sniff
#     if($output -contains "warning") {
#       write-warning "git-hound has detected secret warning(s) - see logs for details"
#     }
#     if($output -contains "failure") {
#       write-error "git-hound has detected secret failure(s) - see logs for details"
#     }

#     echo $output
    
#   displayName: run git-hound
#   workingDirectory: $(repoName)


- script: | 
    output=$(git diff 4b825dc642cb6eb9a060e54bf8d69288fbee4904 --staged | git-hound -config=../git-hound-config/.githound.yml sniff)
    echo "$output"

    if [[ "$output" =~ "warning:" ]]; then
      echo "##vso[task.logissue type=warning]git-hound has detected secret warning(s) - see logs for details"
    fi
    if [[ "$output" =~ "failure:" ]]; then
      echo "##vso[task.logissue type=error]git-hound has detected secret failure(s) - see logs for details"
      exit -1
    fi

  displayName: run git-hound
  workingDirectory: $(repoName)